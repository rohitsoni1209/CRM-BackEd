trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:

- task: NodeTool@0
  inputs:
    versionSpec: '20.x'
  displayName: 'Install Node.js'

- script: |
    npm install
  displayName: 'npm install and build'

- script: |
    echo "This is a placeholder step; no changes are made."
  displayName: 'No-op step'

# Snyk Security Scan for Application Dependencies
- task: SnykSecurityScan@1
  inputs:
    serviceConnectionEndpoint: 'snykoattacko'
    testType: 'app'
    targetFile: 'package.json'
    monitorWhen: 'always'
    failOnIssues: false
    projectName: 'calculator-project/Backend'
    organization: 'f6ff1f1e-b60e-43aa-91ab-fad13fbc3519'
    reportFormat: 'html'
    reportFile: '$(Build.ArtifactStagingDirectory)/snyk-app-report.html'
  displayName: 'Run Snyk App Scan'
  
- task: SonarCloudPrepare@3
  inputs:
    SonarCloud: 'sonar-connection'
    organization: 'demodevopsyl'
    scannerMode: 'cli'
    cliScannerVersion: '6.2.1.4610'
    configMode: 'manual'
    cliProjectKey: 'davidputra2812_CRM-Backend'
    cliProjectName: 'CRM Backend'
    cliSources: '.'

- task: SonarCloudAnalyze@3

- task: SonarCloudPublish@3
  inputs:
    pollingTimeoutSec: '300'
- task: Docker@2
  inputs:
    containerRegistry: 'docker'
    repository: 'crmrepo'
    command: 'buildAndPush'
    Dockerfile: 'Dockerfile'
    tags: '$(Build.BuildNumber)'

- task: CmdLine@2
  displayName: Install Trivy
  inputs:
    script: |
      TRIVY_VERSION=$(curl -s https://api.github.com/repos/aquasecurity/trivy/releases/latest | grep -oP '"tag_name": "\K(.*)(?=")' | sed 's/^v//')
      wget https://github.com/aquasecurity/trivy/releases/download/v${TRIVY_VERSION}/trivy_${TRIVY_VERSION}_Linux-64bit.tar.gz
      tar xzf trivy_${TRIVY_VERSION}_Linux-64bit.tar.gz
      rm trivy_${TRIVY_VERSION}_Linux-64bit.tar.gz
      sudo mv trivy /usr/local/bin/
      trivy -v

- task: CmdLine@2
  displayName: 'Run Trivy scan on image'
  inputs:
    script: |
      wget https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/junit.tpl -O junit.tpl
      trivy image application321.azurecr.io/crmrepo:$(Build.BuildNumber) --db-repository "ghcr.io/aquasecurity/trivy-db:2","public.ecr.aws/aquasecurity/trivy-db" --format template --template "@./junit.tpl" --output $(Build.ArtifactStagingDirectory)/trivy-docker-image-report.xml

- task: PublishTestResults@2
  displayName: 'Publish Trivy App Image Scan Results'
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '$(Build.ArtifactStagingDirectory)/trivy-docker-image-report.xml'
    failTaskOnFailedTests: false

- task: SSH@0
  inputs:
    sshEndpoint: 'deploy'
    runOptions: 'commands'
    commands: |
      docker pull application321.azurecr.io/crmrepo:$(Build.BuildNumber)
      docker run -d --name crm_bknd -p 1711:1711 application321.azurecr.io/crmrepo:$(Build.BuildNumber)

- task: HawkScanInstall@1
  inputs:
    version: latest
    installerType: 'auto'

- script: |
    java -version
  displayName: 'Check Java Version'

- task: JavaToolInstaller@0
  inputs:
    versionSpec: '17'
    jdkSourceOption: 'PreInstalled'
    jdkArchitectureOption: 'x64'
    
- task: RunHawkScan@1
  inputs:
    configFile: "stackhawk.yml"
    version: "latest"
  env:
    HAWK_API_KEY: $(hawk_api_key)

